{"version":3,"sources":["App.tsx","index.tsx"],"names":["Search","Input","MusicList","upName","musicListName","musicList","this","App","useState","allMusicName","setAllMusicName","setMusicList","searchNameList","setSearchNameList","searchText","setSearchText","visible","setVisible","drawervalue","setDrawervalue","useEffect","getMusicFile","musicfileList","getAllMusicName","callback","axios","get","then","res","data","forEach","value","temp","push","allmusicNameList","map","str","value1","console","log","showDrawer","prefix","SearchOutlined","allowClear","placeholder","onSearch","item","includes","index","musicList1","onClick","onCardClick","title","extra","color","length","dataSource","header","orientation","locale","emptyText","renderItem","strs","split","Item","size","placement","closable","onClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e9fb3ba.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Input, List, Tag, Space, Divider, Card, Drawer } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './App.css';\nimport axios from 'axios';\n\nconst { Search } = Input;\n\nclass MusicList {\n  // let musicListName: string;\n  musicListName: string;\n  upName: string;\n  // let musicList: [string];\n  musicList: string[];\n\n  constructor(upName: string, musicListName: string, musicList: string[]) {\n    this.upName = upName;\n    this.musicListName = musicListName;\n    this.musicList = musicList;\n  }\n}\n\nconst App = () => {\n  const [allMusicName, setAllMusicName] = useState<string[]>([]);\n  const [musicList, setMusicList] = useState<MusicList[]>([]);\n  const [searchNameList, setSearchNameList] = useState<string[]>([]);\n  const [searchText, setSearchText] = useState<string>(\"\");\n  const [visible, setVisible] = useState(false);\n  const [drawervalue, setDrawervalue] = useState<MusicList>();\n\n  useEffect(() => {\n    getMusicFile((musicfileList) => getAllMusicName(musicfileList));\n    // setAllMusicName(getAllMusicName(musicList));\n  }, []);\n\n  const getMusicFile = (callback) => {\n    let musicfileList: MusicList[] = [];\n    const url = \"https://raw.githubusercontent.com/ZYmyShadow/music-range-h/main/json.json\";\n    // const url = \"http://localhost:10010/data\";\n    axios.get(url).then((res) => {\n      // axios.post(\"/api/data\").then((res) => {\n      const data = res.data.data;\n      data.forEach(value => {\n        let temp = new MusicList(value.upName, value.musicListName, value.musicList);\n        musicfileList.push(temp);\n      });\n      setMusicList(musicfileList);\n      callback(musicfileList);\n    });\n  };\n\n  const getAllMusicName = (musicList: MusicList[]) => {\n    let allmusicNameList: string[] = [];\n    musicList.map((value) => {\n      const str: string = value.upName + \"-\" + value.musicListName + \"-\";\n      value.musicList.map((value1) => {\n        allmusicNameList.push(str + value1);\n      });\n    })\n    setAllMusicName(allmusicNameList);\n    console.log(allmusicNameList);\n  }\n\n  const onSearch = value => {\n    console.log(value);\n    setSearchText(value);\n    if (value) {\n      let temp = [];\n      allMusicName.forEach(item => {\n        if (item.includes(value)) temp.push(item);\n      });\n      setSearchNameList(temp);\n    } else {\n      setSearchNameList([]);\n    }\n  };\n\n  const onCardClick = (value: MusicList) => {\n    setDrawervalue(value);\n    showDrawer();\n  };\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      { /*搜索框，高度最大400，上滑缩小，下拉变大*/ }\n      <Search\n        prefix={ <SearchOutlined /> }\n        allowClear\n        placeholder=\"请输入歌名或者主播名\"\n        onSearch={ onSearch }\n      />\n      { /*循环卡片List，自动读取所有歌单文件，并储存成List，使用随机数出现小于等于6个的歌曲名字*/ }\n      {\n        searchText == \"\" ?\n          musicList.map((value, index) => {\n            const musicList1 = value.musicList;\n\n            return <Card\n              onClick={ () => { onCardClick(value); } }\n              title={ value.musicListName }\n              key={ index }\n              extra={ <Tag color=\"red\">{ value.upName }</Tag> }\n            >\n              {\n                musicList1.length < 3 ?\n                  musicList1.map((value, index) => {\n                    return <p key={ index }>{ value }</p>\n                  }) :\n                  <>\n                    <p>{ musicList1[0] }</p>\n                    <p>{ musicList1[1] }</p>\n                    <p>{ musicList1[2] }</p>\n                  </>\n              }\n            </Card>\n          }) :\n          <List\n            dataSource={ searchNameList }\n            header={ <Divider orientation=\"left\">搜索结果</Divider> }\n            locale={ { emptyText: \"暂无数据\" } }\n            renderItem={ item => {\n              const strs = item.split('-');\n              return (\n                <List.Item>\n                  <Space size={ 0 }>\n                    <Tag color=\"red\">{ strs[0] }</Tag>\n                    <Tag color=\"volcano\">{ strs[1] }</Tag>\n                  </Space>\n                  { strs[2] }\n                </List.Item>\n              )\n            } }\n          />\n      }\n      { /*点击卡片后，卡片放大，背部遮罩，卡片内部一行一首歌，可以上下滑动，可卡片内部搜索*/ }\n      { drawervalue ? <Drawer\n        title={ drawervalue.upName + \"-\" + drawervalue.musicListName }\n        placement=\"right\"\n        closable={ false }\n        onClose={ onClose }\n        visible={ visible }\n      >\n        <List\n          dataSource={ drawervalue.musicList }\n          renderItem={ item => {\n            return (\n              <List.Item>\n                { item }\n              </List.Item>\n            )\n          } }\n        />\n      </Drawer> : <></> }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}